<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
    <!--第一种方式：自定义一个Servlet，在Servlet的init方法中将转换器注册进来-->
    <!--<servlet>
        <servlet-name>convertServlet</servlet-name>
        <servlet-class>com.jxau.servlet.ConvertServlet</servlet-class>
        <load-on-startup>2</load-on-startup>
        </servlet>-->

    <servlet>
        <servlet-name>action</servlet-name>
        <servlet-class>org.apache.struts.action.ActionServlet</servlet-class>
        <!--第三种方式：自定义一个类继承ActionServlet，复写initOther()方法，在initOther中使用super.initOther()使其他转换器能够继承下来-->
        <!--<servlet-class>com.jxau.servlet.ConvertActionServlet</servlet-class>-->
        <init-param>
            <param-name>config</param-name>
            <param-value>/WEB-INF/struts-config.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>action</servlet-name>
        <url-pattern>*.do</url-pattern>
    </servlet-mapping>

    <!--第四种方式：自定义一个监听器，实现ServletContextListener接口，在contextInitialized方法中将转换器注册进来-->
    <!--<listener>
        <listener-class>com.jxau.listener.ConvertListener</listener-class>
    </listener>-->

    <!--第五种方式：自定义一个拦截器，实现Filter接口，在init方法中将转换器注册进来-->
    <!--<filter>
        <filter-name>convertFilter</filter-name>
        <filter-class>com.jxau.filter.ConvertFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>convertFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>-->
</web-app>